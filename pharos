port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894
unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome
allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true
external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'
profile:
  store-selected: true
  store-fake-ip: true
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - Mijia Cloud
tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - '*'
    - +.lan
  default-nameserver:
    - system
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
# 锚点 - 节点订阅的参数 [每24小时更新一次订阅节点，每 60 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 86400, health-check: {enable: true, url: 'http://www.google.com/generate_204', interval: 60}}
# 锚点 - 节点订阅
proxy-providers:
  我的节点:
    url: https://api.634732.xyz/api/v1/client/subscribe?token=bbe147f642e1db6137e549c3ad74ac54
    !!merge <<: *NodeParam
    path: './proxy_provider/Providers.yaml'
# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b))).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'
# 策略组参数锚点
# 锚点 - 故障转移参数 [每 10 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 10, lazy: true, url: 'http://www.google.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每天更新一次订阅规则，更新规则时使用直连策略]
RuleSet: &RuleSet {type: http, behavior: classical, interval: 86400, format: yaml, proxy: DIRECT}
# 策略组
proxy-groups:
  - {name: OpenAi, type: select, include-all: true, filter: *FilterAll, icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png'}
  - {name: Apple, type: select, proxies: [DIRECT, Proxy, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点], icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png'}
  - {name: TikTok, type: select, proxies: [Proxy, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点], icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png'}
  - {name: Streaming, type: select, proxies: [Proxy, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点], icon: 'https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/netflix.png', include-all: true}
  - {name: Telegram, type: select, proxies: [Proxy, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点], icon: 'https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png'}
  - {name: Proxy, type: select, proxies: [🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点], icon: 'https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/Proxy.png', include-all: true}
  - {name: 🇭🇰 香港节点, !!merge <<: *FallBack, filter: *FilterHK}
  - {name: 🇺🇸 美国节点, !!merge <<: *FallBack, filter: *FilterUS}
  - {name: 🇯🇵 日本节点, !!merge <<: *FallBack, filter: *FilterJP}
  - {name: 🇸🇬 新加坡节点, !!merge <<: *FallBack, filter: *FilterSG}
# 订阅规则
rule-providers:


  ad:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/tearpeng/ios/refs/heads/main/ad'
    path: './RuleSet/ad'
    behavior: classical
    format: text
    interval: 86400
  Streaming:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/tearpeng/ios/refs/heads/main/Media'
    path: './RuleSet/Media'
    behavior: classical
    format: text
    interval: 86400
  Apple:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical_No_Resolve.yaml'
    path: './RuleSet/Apple.yaml'
  TikTok:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.yaml'
    path: './RuleSet/TikTok.yaml'
  AI:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/tearpeng/ios/refs/heads/main/AI'
    path: './RuleSet/AI'
    behavior: classical
    format: text
    interval: 86400
  OKX:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OKX/OKX.yaml'
    path: './RuleSet/OKX.yaml'
  微信:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/tearpeng/ios/refs/heads/main/WeChat'
    path: './RuleSet/WeChat'
    behavior: classical
    format: text
    interval: 86400
  抖音:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/DouYin/DouYin.yaml'
    path: './RuleSet/DouYin.yaml'


  Proxy:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ProxyGFWlist.list'
    path: './RuleSet/ProxyGFWlist.list'
    behavior: classical
    format: text
    interval: 86400

  LAN:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml'
    path: './RuleSet/LAN.yaml'
  ASN:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.yaml'
    path: './ASN.China.yaml'

  ChinaDomain:
    !!merge <<: *RuleSet
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ChinaDomain.list'
    path: './RuleSet/ChinaDomain.list'
    behavior: classical
    format: text
    interval: 86400

# 分流规则指向
rules:

  - RULE-SET,ad,REJECT
  - RULE-SET,Streaming,Streaming
  - RULE-SET,微信,DIRECT
  - RULE-SET,Apple,Apple
  - RULE-SET,OKX,DIRECT
  - RULE-SET,抖音,DIRECT
  - RULE-SET,TikTok,TikTok
  - RULE-SET,AI,OpenAi
  - RULE-SET,Proxy,Proxy
  - RULE-SET,ChinaDomain,DIRECT
  - RULE-SET,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,Proxy
